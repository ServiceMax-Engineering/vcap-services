#!/usr/bin/env ruby
# -*- mode: ruby -*-
# Copyright (c) 2009-2011 VMware, Inc.

ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile", __FILE__)

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', '..', 'base', 'lib')
require 'base/node_bin'

$LOAD_PATH.unshift(File.expand_path("../../lib", __FILE__))
require "elasticsearch_service/elasticsearch_node"

class VCAP::Services::ElasticSearch::NodeBin < VCAP::Services::Base::NodeBin

  def node_class
    VCAP::Services::ElasticSearch::Node
  end

  def default_config_file
    config_base_dir = ENV["CLOUD_FOUNDRY_CONFIG_PATH"] || File.join(File.dirname(__FILE__), '..', 'config')
    File.join(config_base_dir, 'elasticsearch_node.yml')
  end

  def additional_config(options, config)
    options[:es_conf_template] = File.expand_path("../../resources/elasticsearch.yml.erb", __FILE__)
    options[:logging_conf_template] = File.expand_path("../../resources/logging.yml.erb", __FILE__)

	options[:capacity] = parse_property(config, "capacity", Integer, :optional => true) || 10
	options[:max_memory] = parse_property(config, "max_memory", Integer, :optional => true) || 2048
	options[:pid] = parse_property(config, "pid", String)
	options[:exec_path] = parse_property(config, "exec_path", String)
	options[:logs_dir] = parse_property(config, "logs_dir", String)
	options[:master_data_dir] = parse_property(config, "master_data_dir", String)	
	options[:tcp_port_range] = parse_property(config, "tcp_port_range", Range)
	options[:http_port_range] = parse_property(config, "http_port_range", Range)

	options[:elasticsearch] = parse_property(config, "elasticsearch", Hash)
    options
  end
end

VCAP::Services::ElasticSearch::NodeBin.new.start
